name: Build, Analyze, Scan

on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: Build, Analyze & Deploy
    runs-on: self-hosted

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install npm dependencies
        run: npm install

      # 4️⃣ Build & analyze with SonarQube
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # 5️⃣ Build the React
      - name: Build React app
        run: npm run build

      # 6️⃣ Security scan with Trivy
      - name: Trivy filesystem scan
        run: trivy fs . > trivyfs.txt

      # 7️⃣ Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 8️⃣ Docker build and push
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: taheer12/tic-tac-toe:latest
          load: true

      - name: trivy image scan
        run: trivy image taheer12/tic-tac-toe:latest > trivyimage.txt

  deploy:
    needs: build-analyze-scan
    runs-on: self-hosted
    steps:
      - name: docker pull image
        run: docker pull taheer12/tic-tac-toe:latest

      - name: Image scan
        run: trivy image taheer12/tic-tac-toe:latest > trivyimagedeploy.txt  

      - name: Deploy to container
        run: docker run -d --name game -p 3000:3000 taheer12/tic-tac-toe:latest

      - name: Update kubeconfig
        run: aws eks --region eu-north-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml

      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions-eks'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
